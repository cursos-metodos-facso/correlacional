---
title: "Práctico 4: Matrices de correlación, casos pérdidos e índices"
date: "2024-10-08"
lang: es
execute:
  freeze: auto
  cache: false 
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
    warning = F,
    error = F,
    message = F
)
```

# Objetivo de la práctica

El objetivo de esta guía práctica es conocer maneras de reportar coeficientes de correlación y otras medidas de correlación para variables ordinales. Además, nos introduciremos en el tratamiento de valores perdidos y generación de índices. Todo ello a partir de una pregunta de investigación empírica. 

En detalle, aprenderemos a:

1. Estimar e interpretar coeficientes de correlación de Spearman y Kendall
2. Generar y reportar matrices de correlación
3. Tratamiento de casos perdidos
4. Analizar baterías de indicadores y generar índices

Utilizaremos un ejemplo que desarrollaremos progresivamente para ilustrar cada paso. Al finalizar, se propondrá un ejercicio autónomo que deberá resolverse de manera individual o grupal.

# 1. Pregunta de investigación

El aumento de la desigualdad económica y la concentración de la riqueza se han vinculado al resurgimiento de diversos conflictos sociales a nivel global. En este contexto, varios estudios han explorado en qué medida los individuos perciben conflictos sociales entre grupos, especialmente aquellos organizados verticalmente, como ricos-pobres o trabajadores-empresarios (cf. Edlund & Lindh, 2015; Hadler, 2015).

La investigación ha demostrado que las percepciones de conflicto social se asocian tanto a desigualdades objetivas como subjetivas. Por un lado, en países más desiguales y entre personas de menor estatus socioeconómico, estas percepciones tienden a ser mayores (Edlund & Lindh, 2015). Por otro lado, quienes se ubican en posiciones más bajas de la estructura social perciben más conflictos, siendo estas percepciones influenciadas por la percepción de desigualdad económica (Hadler, 2015; Hertel & Schöneck, 2019).

Sin embargo, en la literatura aún no se ha analizado cómo la percepción de desigualdad afecta las percepciones de conflicto social ni se ha examinado la consistencia de los indicadores utilizados para medirlas. Estas preguntas las responderemos estudiando el caso de Chile, un país que se caracteriza por sus altos niveles de desigualdad y concentración de la riqueza (Chancel, et al. 2022). 


**Pregunta 1**: _¿En qué medida se relacionan la percepción de desigualdad y la percepción de conflictos sociales en Chile?_


**Pregunta 2**: _¿Cómo se relacionan los distintos indicadores utilizados para medir la percepción de conflictos sociales?_


## Recursos de la práctica

En esta práctica trabajaremos con un subconjunto de datos previamente procesados derivados de las encuesta del Modulo de Desigualdad Social de la [International Social Survey Programme (ISSP)](https://www.gesis.org/en/issp/data-and-documentation/social-inequality/2009) para Chile del año 2009. Para este ejercicio, obtendremos directamente esta base desde internet. No obstante, también es posible acceder a la misma información a través del siguiente enlace: [{{< fa table >}} `ISSP Chile 2009`](https://github.com/cursos-metodos-facso/datos-ejemplos/raw/refs/heads/main/issp_2009_chile.RData). Desde allí, podrás descargar el archivo que contiene el subconjunto procesado de la base de datos ISSP 2009 para Chile.

# 1. Preparación de datos

Comencemos por preparar nuestros datos. Iniciamos cargando las librerías necesarias.

```{r librerias, echo=TRUE, collapse=TRUE}
pacman::p_load(tidyverse, # Manipulacion datos
               sjPlot, # Graficos y tablas
               sjmisc, # Descriptivos
               corrplot, # Correlaciones
               psych, # Test estadísticos
               kableExtra) # Tablas

options(scipen = 999) # para desactivar notacion cientifica
rm(list = ls()) # para limpiar el entorno de trabajo
```

Cargamos los datos directamente desde internet.

```{r datos, echo=TRUE}

# Cargar bbdd desde internet
load(url("https://github.com/cursos-metodos-facso/datos-ejemplos/raw/refs/heads/main/issp_2009_chile.RData"))

```

A continuación, exploramos la base de datos `issp`.

```{r exploracion, echo=TRUE}

names(issp) # Nombre de columnas
dim(issp) # Dimensiones

```

```{r include = F}
rows <- NROW(issp)
cols <- NCOL(issp)
```

Contamos con `r cols` variables (columnas) y `r rows` observaciones (filas).

Ahora, realizaremos un pequeño procesamiento de nuestros datos con `dplyr`, todo de una vez mediante el uso de pipes `%>%`. Para recordar los pasos para el procesamiento de datos, revisar el [curso anterior](https://descriptiva-facso.netlify.app/assignment/03-practico).

```{r proc, echo=TRUE, }

proc_issp <- issp %>% # seleccionamos
    dplyr::select(educyrs,
                  income,
                  topbot,
                  perc_ineq,
                  starts_with("conflict")) 

```

Ahora, exploremos estadísticos descriptivos de nuestra base procesada `proc_issp`

```{r descr, echo=TRUE}

proc_issp %>% 
  sjmisc::descr(show = c("label","range", "mean", "sd", "NA.prc", "n")) %>%
  kable(.,"markdown")

```

Vamos con nuestros análisis para responder nuestras preguntas, pero antes...


# 2. Entonces, ¿qué técnica usar?

::: callout-note

**Pregunta 1**: Dado que las variables de percepción de conflictos y percepción de desigualdad son de nivel de medición ordinal, podemos estimar su asociación con coeficientes de correlación para variables ordinales.

**Pregunta 2**: Podemos estimar una matriz de correlaciones entre las variables de percepción de conflictos tratando los casos pérdidos. Luego, podemos estimar la consistencia interna (alpha de Cronbach) para generar un índice promedio.

:::

# 3. Correlación de Spearman y Kendall

## Coeficiente de correlación de Spearman

Cuando queremos conocer la asociación entre variables que son ordinales y/o cuando nuestras variables no cumplen con los supuestos de distribución normal, podemos utilizar la correlación de Spearman.

- Emplea rangos en lugar de valores numéricos para evaluar la relación.
- Es alta cuando las observaciones tienen un ranking similar.

En R calcularlo es sencillo, pero debemos tener en cuenta que las variables que relacionemos tengan un orden de rango similar: por ejemplo, que el valor más bajo sea el rango más bajo y que el valor más alto sea el rango más alto.

Observemos las frecuencias de las variables `conflict_rp` (conflictos ricos-pobres) y `perc_ineq` (percepción desigualdad) 

```{r frq, echo=TRUE, split=TRUE}
sjmisc::frq(proc_issp$conflict_rp)

sjmisc::frq(proc_issp$perc_ineq)

```

Ahora, calculemos el coeficiente de correlación de Spearman con cor.test.

```{r ex0_cor, warning=FALSE}
cor.test(proc_issp$conflict_rp, proc_issp$perc_ineq, method = "spearman") #especificamos metodo spearman
```

Ahora conocemos el valor del coeficiente de Spearman mediante al argumento `rho`, que es igual a 0.12, siendo positivo y pequeño según los criterios de Cohen (1988).

## Coeficiente de correlación Tau de Kendall

Recomendado cuando hay un set de datos pequeños y/o cuando hay mucha repetición de observaciones en el mismo ranking. Se basa en una comparación de pares de observaciones concordantes y discordantes.

Ahora, calculemos el coeficiente de correlación Tau de Kendall con cor.test.

```{r ex1_cor, warning=FALSE}
cor.test(proc_issp$conflict_rp, proc_issp$perc_ineq, method = "kendall") #especificamos metodo kendall
```

El valor del coeficiente de Kendall mediante al argumento `tau`, es igual a 0.1, siendo positivo y muy pequeño según los criterios de Cohen (1988).

**¿PERO QUÉ HACER CON LOS CASOS PÉRDIDOS?**

# 4. Tratamiento de casos perdidos 

Trabajar con datos a menudo implica enfrentar valores perdidos (`NA`), lo que puede ser un gran desafío. Estos valores _indican la ausencia de un valor en una base de datos_. Los valores perdidos pueden originarse por diversas razones, como el sesgo de no respuesta en encuestas, errores en la entrada de datos o simplemente la falta de información para ciertas variables.


```{r, echo=FALSE}

data.frame(
  X1 = c(NA, 7, 8, 9, 3),
  X2 = c(4, 1, NA, NA, 3),
  X3 = c(1, 4, 2, 9, 6),
  X4 = c("Hola", "No soy un NA", NA, "Amo R", NA)
) %>% 
  kable(format = "html") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = T) %>% 
  kableExtra::kable_styling(latex_options = "hold_position", position = "center") %>% 
  row_spec(0, bold = T, color = "white", background = "#ff3331")



```

La presencia de valores perdidos puede tener un impacto considerable en la precisión y confiabilidad de los análisis estadísticos, lo que a su vez puede conducir a resultados sesgados y conclusiones incorrectas. 

Existen varias formas de tratar valores perdidos, que van desde enfoques simples hasta métodos más complejos, como la imputación. En esta ocasión, nos centraremos en las dos estrategias más comunes: 

- trabajar exclusivamente con casos completos (listwise) o 
- retener los casos con valores perdidos, pero excluyéndolos al calcular estadísticas (pairwise).


### a) Analísis con casos completos: listwise deletion

Este enfoque es uno de los más conocidos: implica remover completamente las observaciones que tienen valores perdidos en cualquier variable de interés. En otras palabras, si una fila/caso en un conjunto de datos tiene al menos un valor faltante en alguna de las variables que estás considerando, se eliminará por completo. 

En R, esto podemos hacerlo con la función `na.omit`. Para hacer esto, sigamos estos pasos:

- respaldar la base de datos original en el espacio de trabajo (por si queremos en adelante realizar algún análisis referido a casos perdidos)-
- contamos el número de casos con el comando `dim`.
- contamos cuántos y en dónde tenemos casos perdidos.
- borramos los casos perdidos con `na.omit`.
- contamos nuevamente con `dim` para asegurarnos que se borraron.

```{r, echo=TRUE, warning=FALSE, message=FALSE}

proc_issp_original <- proc_issp
dim(proc_issp)

```

```{r, echo=TRUE, warning=FALSE, message=FALSE}
sum(is.na(proc_issp))
```

```{r, echo=TRUE, warning=FALSE, message=FALSE}
colSums(is.na(proc_issp))
```


```{r, echo=TRUE, warning=FALSE, message=FALSE}
proc_issp <- na.omit(proc_issp)
dim(proc_issp)
```

Ahora nos quedamos con 1021 observaciones sin casos perdidos.

Aunque simple de implementar, con este enfoque podemos perder información importante, especialmente si los valores perdidos no se distribuyen aleatoriamente.

::: callout-box

Siempre hay que intentar rescatar la mayor cantidad de casos posibles. Por lo tanto, si un listwise genera más de un 10% de casos perdidos se debe detectar qué variables esta produciendo esta pérdida e intentar recuperar datos. Puedes revisar un ejemplo [aquí.](https://multivariada.netlify.app/assignment/11-code/#recuperar-casos-perdidos-ejemplo-variable-ingresos)

:::


### b) Retener pero excluir: pairwise deletion

A diferencia del anterior, este es un enfoque en el que las observaciones se utilizan para el análisis siempre que tengan datos disponibles para las variables específicas que se están analizando. En lugar de eliminar toda una fila si falta un valor, se eliminan solo los valores faltantes en las variables que se están analizando en ese momento. 

Para hacer esto en R debemos siempre verificar e indicar en nuestro código si queremos (o no) remover los `NA` para realizar los análisis.

```{r, echo=TRUE, message=FALSE, warning=FALSE, collapse=FALSE}

mean(proc_issp_original$conflict_rp); mean(proc_issp_original$perc_ineq)

mean(proc_issp_original$conflict_rp, na.rm = TRUE); mean(proc_issp_original$perc_ineq, na.rm = TRUE)

```

Con el primer código no obtuvimos información sustantiva en ciertas variables, pero con el segundo sí al remover los `NA` solo de dicha variable para un cálculo determinado.

# 5. Matrices de correlación

La correlación es una estimación de asociación de dos variables. Sin embargo, en los análisis de bases de datos usualmente se exploran asociaciones entre múltiples pares de variables, lo que genera una matriz de correlación. En una matriz, las variables se presentan en las filas y las columnas, y en las celdas donde se cruzan los pares de variables se muestra su coeficiente de correlación.

En su forma simple en R se aplica la función `cor` a la base de datos, y la guardamos en un objeto que le damos el nombre M para futuras operaciones:


```{r cor1, echo=TRUE, message=FALSE, warning=FALSE}
M <- cor(proc_issp_original, use = "complete.obs") 
M
```

Este es el reporte simple, pero no muy amigable a la vista. Para una versión más reportable, utilizamos la funcion `tab_corr`. 

```{r cor2, echo=TRUE, message=FALSE, warning=FALSE}
sjPlot::tab_corr(proc_issp_original, 
                 triangle = "lower")
```

La **distinción** entre **listwise y pairwise es relevante al momento de estimar matricies de correlación**, donde esta decisión debe estar claramente explicitada y fundamentada. En ejemplo de tabla anterior usamos _listwise_ que es el argumento por defecto (y nos lo indica al final de la tabla). 

Veamos como hacerlo con _pairwise_:

```{r cor2_1, echo=TRUE, message=FALSE, warning=FALSE}
sjPlot::tab_corr(proc_issp_original, 
                 na.deletion = "pairwise", # espeficicamos tratamiento NA
                 triangle = "lower")
```


Con esta mejor visualización, algunas observaciones sobre la matriz de correlaciones:

- En esta matriz las variables están representadas en las filas y en las columnas.
- Cada coeficiente expresa la correlación de una variable con otra. Por ejemplo, la correlación entre la variable de `educyrs` y `income` es 0.43.
- La información de cada coeficiente se repite sobre y bajo la diagonal, ya que es el mismo par de variables pero en el orden alterno. Por convención en general se omiten las correlaciones redundantes sobre la diagonal, por eso aparece en blanco.
- En la diagonal corresponde que todos los coeficientes sean 1, ya que la correlación de una variable consigo misma es perfectamente positiva.

Otra manera de presentar matrices de correlación es mediante gráficos. Veamos un ejemplo con la función `corrplot` de la librería `corrplot` sobre nuestra matriz `M` ya creada.

```{r cor3, echo=TRUE, message=FALSE, warning=FALSE}

diag(M) <- NA
corrplot::corrplot(M,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#E16462", "white", "#0D0887"))(12),
                   bg = "white",
                   na.label = "-") 
```

# 6. Baterías e índices

En la literatura sobre percepción de conflictos se suele utilizar un índice sumativo o promedio entre los distintos indicadores sobre conflictos percibidos: `conflict_rp`,`conflict_wcmc`,`conflict_mw`,`conflict_tb`.

Entonces, para poder responder nuestras preguntas de investigación, primero generaremos una matriz de correlaciones entre estos indicadores, luego evaluaremos su consistencia y generaremos el índice `psci`. Finalmente, realizaremos un test de correlación para examinar la asociación entre `psci` y `perc_ineq`.

```{r matriz_psci, echo=TRUE}
 
M_psci <- proc_issp %>% 
  dplyr::select(starts_with("conflict"))

sjPlot::tab_corr(M_psci, 
                 na.deletion = "listwise", # espeficicamos tratamiento NA
                 triangle = "lower")
```

Los ítems se correlacionan de manera positiva y con tamaños de efecto moderados y altos para las ciencias sociales. Con ello, podemos pasar a evaluar sus relaciones tienen consistencia interna.

```{r alpha, echo=TRUE}

alpha_psci <- psych::alpha(M_psci)
alpha_psci$total$raw_alpha
```


De acuerdo con este resultado, el alpha de Cronbach reflejado en el `raw_alpha` del output es superior al estandar de 0.6 en ciencias sociales, por lo que se sostiene su consistencia.

Ahora, generemos el índice `psci`

```{r echo=TRUE}

proc_issp <- cbind(proc_issp, "psci" = rowMeans(proc_issp %>% select(starts_with("conflict")), na.rm=TRUE))

sjmisc::descr(proc_issp$psci, show = c("range", "mean", "sd", "NA.prc", "n")) %>%
  kable(.,"markdown")
```

# 7. Respuesta a la pregunta de investigación

### Pregunta 1

_¿En qué medida se relacionan la percepción de desigualdad y la percepción de conflictos sociales en Chile?_

Realicemos la prueba estadística correspondiente.

```{r, echo=TRUE}

cor.test(proc_issp$psci, proc_issp$perc_ineq, method = "pearson", use = "complete.obs")

```

De acuerdo a este resultado, la correlación de Pearson entre la percepción de conflicto social y la percepción de desigualdad es positiva, muy pequeña y estadisticamente significativa ($r$ = 0.08, $p$ < 0.05). 

### Pregunta 2

_¿Cómo se relacionan los distintos indicadores utilizados para medir la percepción de conflictos sociales?_

De acuerdo al resultado de la matriz de correlaciones y del alpha de Cronbach, los indicadores utilizados para medir la percepción de conflictos se relacionan positiva y significativamente ($p$ < 0.05), además de demostrar un nivel de consistencia interna aceptable ($\alpha$ = 0.8).


# Ejercicio autónomo

A partir de la base de datos de `proc_issp` responda la siguiente pregunta _¿en qué medida la percepción de conflictos se asocia con el estatus socioeconomico de las personas_ Para responder esta pregunta siga los siguientes pasos:

1. Estime y reporte una matriz de correlación con las variables `income` y `educyrs`. Considere el tratamiento de casos perdidos
2. Calcule el alpha de cronbach de la matriz del punto anterior
3. Genere un índice promedio de estatus socioeconomico y llámelo `ses`
4. Calcule el coeficiente de correlación de Pearson ($r$) entre las variables `psci` y `ses`. Reporte e interprete sus resultados.


