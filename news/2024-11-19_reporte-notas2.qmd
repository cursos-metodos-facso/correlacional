---
title: "Reporte Evaluación 2"
date: 11-19-2024
categories: [info, mail-UCursos]
lang: es
website:
  comments:
    giscus:
      repo: cursos-metodos-facso/correlacional
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      message = FALSE,
                      warning = FALSE)
```

Este reporte realiza un análisis de la Evaluación 2 sobre la Unidad 2: Bivariada

# Pauta y recorrecciones

La pauta de evaluación se puede revisar [aquí](https://prueba2--correlacional.netlify.app/evaluations/pauta-prueba2.html)

# Librerías, datos y ajustes

```{r }
pacman::p_load(tidyverse, sjmisc, sjPlot, kableExtra, sjlabelled, readxl, here, googlesheets4, janitor)
```

```{r echo=FALSE}
#Read google sheets data into R
prueba2 <- read_sheet("https://docs.google.com/spreadsheets/d/15DWMgw193z6is4c_klIGCCEGPWLPwEviqhazFKpKzKY/edit?gid=1378566210#gid=1378566210",  sheet = "detalle_puntajes")

names(prueba2)
prueba2 <- prueba2 %>% 
  select(4:20) %>% janitor::clean_names()
```

## Etiquetados

```{r}
# Label variables

prueba2$puntaje_p1_1 <- set_label(x = prueba2$puntaje_p1_1, 
                         label = "Correlación: Código")
prueba2$puntaje_p1_2 <- set_label(x = prueba2$puntaje_p1_2, 
                         label = "Correlación: Intepretación")
prueba2$puntaje_p2_1 <- set_label(x = prueba2$puntaje_p2_1, 
                         label = "Matriz cor: Código")
prueba2$puntaje_p2_2a <- set_label(x = prueba2$puntaje_p2_2a, 
                         label = "Matriz cor: Interpretación significación")
prueba2$puntaje_p2_2b <- set_label(x = prueba2$puntaje_p2_2b, 
                         label = "Matriz cor: Interpretación perdidos")
prueba2$puntaje_p2_2c <- set_label(x = prueba2$puntaje_p2_2c, 
                         label = "Matriz cor: Interpretación tipo")                                                  
prueba2$puntaje_p2_2 <- set_label(x = prueba2$puntaje_p2_2, 
                         label = "Matriz cor: Interpretación total")
prueba2$puntaje_p3_1 <- set_label(x = prueba2$puntaje_p3_1, 
                         label = "Chi: Código")
prueba2$puntaje_p3_2 <- set_label(x = prueba2$puntaje_p3_2, 
                         label = "Chi: Interpretación")
prueba2$p1_total <- set_label(x = prueba2$p1_total, 
                         label = "Pregunta 1")
prueba2$p2_total <- set_label(x = prueba2$p2_total, 
                         label = "Pregunta 2")
prueba2$p3_total <- set_label(x = prueba2$p3_total, 
                         label = "Pregunta 3")
prueba2$nota <- set_label(x = prueba2$nota, 
                         label = "Nota") 

# Cambiar inasistentes a NA
filas_a_modificar <- which(!is.na(prueba2$nota) & prueba2$nota == 1)
filas_a_modificar
  # Asignamos NA a todas las columnas de las filas identificadas
prueba2[filas_a_modificar, ] <- NA
```

# Descriptivos

## Tabla descriptiva

```{r}
prueba2 %>% descr(., show = c("label","range", "mean", "sd", "n"))%>% kable(.,"markdown", digits=2)

```

## Nota 

```{r}
media_nota <- mean(prueba2$nota, na.rm = TRUE)
sd_nota <- sd(prueba2$nota, na.rm = TRUE)
hist(prueba2$nota, prob = TRUE, col = "lightblue",
     main = "Histograma de Notas",
     xlab = "Nota", ylab = "Densidad")
abline(v = media_nota, col = "red", lwd = 2, lty = 2)
```

```{r}
prueba2 <- prueba2 %>%  mutate(notas_cat=cut(nota, breaks=c(-Inf,4,5,6, Inf), labels=c("Menor a 4.0","4.0-5.0","5.0-6.0","6.0-7.0")))

frq(prueba2$notas_cat, out="browser", show.na = FALSE, title = "Rangos de notas")

prueba2 <- prueba2 %>% dplyr::select(-notas_cat)
```

## Preguntas

```{r}
# violin plot
prueba2_long <- prueba2 %>% 
  pivot_longer(cols=starts_with("p"),
               names_to = "Prueba",
               values_to = "Valor")

  
prueba2_long %>% filter(Prueba=="p1_total" |Prueba=="p2_total" | Prueba=="p3_total") %>%   
ggplot(., aes(x = Prueba, y = Valor, fill = Prueba)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
  theme_minimal() +
  labs(title = "Comparación de Preguntas",
       x = "Preguntas",
       y = "Valor") +
  theme(legend.position = "none")

prueba2_long %>% filter(Prueba=="puntaje_p1_1" |Prueba=="puntaje_p2_1" | Prueba=="puntaje_p3_1") %>%   
ggplot(., aes(x = Prueba, y = Valor, fill = Prueba)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
  theme_minimal() +
  labs(title = "Comparación de Puntajes en Código",
       x = "Preguntas Código",
       y = "Valor") +
  theme(legend.position = "none")

prueba2_long %>% filter(Prueba=="puntaje_p1_2" |Prueba=="puntaje_p2_2" | Prueba=="puntaje_p3_2") %>%   
ggplot(., aes(x = Prueba, y = Valor, fill = Prueba)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
  theme_minimal() +
  labs(title = "Comparación de Puntajes en Interpretación",
       x = "Preguntas Código",
       y = "Valor") +
  theme(legend.position = "none")


```

## Asociaciones

```{r}
M1 <- prueba2 %>% select(puntaje_p1_1, puntaje_p1_2, puntaje_p2_1, puntaje_p2_2, puntaje_p3_1, puntaje_p3_2) %>% cor(., use = "complete.obs")
diag(M1) <- NA
corrplot::corrplot(M1,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#E16462", "white", "#0D0834"))(10),
                   bg = "white",
                   na.label = "-") 


M2 <- prueba2 %>% select(p1_total, p2_total, p3_total, nota) %>% cor(., use = "complete.obs")
diag(M2) <- NA
corrplot::corrplot(M2,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#E16462", "white", "blue"))(10),
                   bg = "white",
                   na.label = "-") 


```

## Asistencia

```{R}

cor(prueba2$nota, prueba2$asistida,use = "complete.obs")

ggplot(prueba2, aes(x = asistida, y = nota)) + 
  geom_jitter(width = 0.2, color = "red", size = 2) + 
  labs(title = "Relación entre asistencia y notas en Evaluación 2 (r=0.34)") + 
  labs(x = "Asistencia", y = "Nota") + 
  theme(axis.title = element_text(size = 12),        # Tamaño de las etiquetas de los ejes
        axis.text = element_text(size = 12)) +       # Tamaño del texto de los ejes
  theme(aspect.ratio = 1/1.5) +
  theme(plot.title = element_text(size = 12,         # Tamaño del título
                                  face = "bold",     # Tipo de letra (negrita)
                                  hjust = 0.5)) 

prueba2 <- prueba2 %>%  mutate(asist_total_cat=cut(asistida, breaks=c(-Inf,40,50,60,70,80,90,Inf), labels=c("Menos de 40%","50%","60%","70%","80%","90%", "100%")))

frq(prueba2$asist_total_cat, out="browser", show.na = FALSE, title = "Asistencia")

prueba2 %>% # se especifica la base de datos
  dplyr::select(asist_total_cat, nota)  %>% # se seleccionan las variables
  dplyr::group_by(Asistencia=sjlabelled::as_label(asist_total_cat)) %>% # se agrupan por la variable categórica y se usan sus etiquetas con as_label
  dplyr::summarise(Obs.=n(),Promedio=round(mean(nota),2),SD=round(sd(nota),2)) %>% # se agregan las operaciones a presentar en la tabla
  kable(, format = "markdown") # se genera la tabla


prueba2 <- prueba2 %>% dplyr::select(-asist_total_cat)
```

## Correlación entre evaluaciones

```{r}
cor(prueba2$nota, prueba2$nota_p1, use = "complete.obs")

ggplot(prueba2, aes(x = nota_p1, y = nota)) + 
  geom_jitter(width = 0.2, color = "red", size = 2) + 
  labs(title = "Relación entre Evaluación 1 y Evaluación 2 (r=0.4.4)") + 
  labs(x = "Evaluación 1", y = "Evaluación 2") + 
  theme(axis.title = element_text(size = 12),        # Tamaño de las etiquetas de los ejes
        axis.text = element_text(size = 12)) +       # Tamaño del texto de los ejes
  theme(aspect.ratio = 1/1.5) +
  theme(plot.title = element_text(size = 12,         # Tamaño del título
                                  face = "bold",     # Tipo de letra (negrita)
                                  hjust = 0.5)) 
```
